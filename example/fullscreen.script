go.property("left", -110)
go.property("right", 110)
go.property("top", 20)
go.property("bottom", -25)

local function clamp(x, min, max)
	if x < min then x = min elseif x > max then x = max end
	return x
end

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "clear_color", { color = vmath.vector4(0.013, 0.173, 0.278, 1.000) })
	self.eye = vmath.vector3()
	self.layers = {}
	for _,id in pairs({ "foreground", "back", "far" }) do
		self.layers[id] = go.get_position(id).z
	end
	self.samples = {}
end

function update(self, dt)
	--print(self.eye)
	for id,depth in pairs(self.layers) do
		local offset = self.eye * depth * depth
		local pos = go.get_position(id)
		pos.x = offset.x
		pos.y = offset.y
		go.set_position(pos, id)
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") then
		if action.pressed then
			self.drag = true
			action.dx = 0
			action.dy = 0
		elseif action.released then
			self.drag = false
		end

		if self.drag then
			self.eye.x = self.eye.x + action.dx * 0.1
			self.eye.y = self.eye.y + action.dy * 0.1
		end
		self.eye.x = clamp(self.eye.x, self.left, self.right)
		self.eye.y = clamp(self.eye.y, self.bottom, self.top)
	end

end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
